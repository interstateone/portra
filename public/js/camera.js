// Generated by CoffeeScript 1.3.3
(function() {
  $(function() {
    var e, t, n, r, i, s, o, u, a, f, l, c, h, p, d, v, m, g, y;
    n = $('input[type="file"]');
    p = $(".shutter");
    r = $("canvas");
    h = $(".share");
    a = $(".locate");
    i = $("textarea");
    s = $(".caption");
    u = $(".counter");
    e = $(".prompt");
    m = $(".spinnerContainer");
    g = 0;
    y = void 0;
    v = {
      lines: 12,
      length: 11,
      width: 4,
      radius: 12,
      color: "#FFF",
      hwaccel: !0
    };
    d = new Spinner(v);
    if ("standalone" in window.navigator && !window.navigator.standalone) {
      p.hide();
      e.show();
    }
    p.on("touchend", function() {
      n.trigger("click");
      $.get("/twitter_config", function(e) {
        var t;
        g = 140 - parseInt($.parseJSON(e).characters_reserved_per_media, 10);
        0 < g && g < 140 || (g = 119);
        i.attr("maxLength", g);
        t = i.val() === "" ? i.attr("placeholder") : i.val();
        return u.text(t.length + "/" + g);
      });
      return _gaq.push([ "_trackEvent", "Photos", "Camera" ]);
    });
    i.on("keyup", function() {
      var e;
      e = i.val() === "" ? i.attr("placeholder") : i.val();
      return u.text(e.length + "/" + g);
    });
    n.on("change", function() {
      var e, t;
      e = this.files[0];
      y = e.type;
      t = new FileReader;
      t.onload = o;
      return t.readAsBinaryString(e);
    });
    h.on("click", function() {
      var e = this;
      console.log("tweeting photo");
      r.is(":visible") && r.animate({
        marginTop: "-2000px"
      }, "fast", function() {
        r.hide();
        s.hide();
        d.spin(m[0]);
        p.fadeOut("fast");
        l();
        return h.prop("disabled", !0);
      });
      return _gaq.push([ "_trackEvent", "Photos", "Tweet" ]);
    });
    f = function(e, t) {
      var n, i, o;
      r.show();
      i = r[0];
      n = i.getContext("2d");
      o = new Image;
      o.src = "data:" + y + ";base64," + e;
      return o.onload = function() {
        var e, r, u, a;
        u = 1;
        r = 1e3;
        e = 1e3;
        if (o.width > o.height) {
          if (o.width > r) {
            i.height = r / o.width * o.height;
            i.width = r;
          }
        } else if (o.height > e) {
          i.width = e / o.height * o.width;
          i.height = e;
        }
        n.clearRect(0, 0, i.width, i.height);
        if ((a = parseInt(t.Orientation, 10)) === 3 || a === 6 || a === 8) {
          n.translate(i.width / 2, i.height / 2);
          switch (parseInt(t.Orientation, 10)) {
           case 6:
            n.rotate(Math.PI / 2);
            break;
           case 3:
            n.rotate(Math.PI);
            break;
           case 8:
            n.rotate(Math.Pi * 3 / 2);
          }
          n.translate(-i.width / 2, -i.height / 2);
        }
        n.drawImage(o, 0, 0, i.width, i.height);
        return Caman("#photo-canvas", function() {
          return this.exposure(10).saturation(10).colorize(255, 200, 0, 10).vignette("40%", 20).render(function() {
            console.log("finished");
            d.stop();
            p.prop("disabled", !1);
            h.prop("disabled", !1);
            return s.show();
          });
        });
      };
    };
    o = function() {
      var e = this;
      p.prop("disabled", !0);
      d.spin(m[0]);
      return p.animate({
        marginTop: window.innerHeight
      }, "swing", function() {
        var n, r;
        r = EXIF.readFromBinaryFile(new BinaryFile(e.result));
        n = t(e.result);
        return f(n, r);
      });
    };
    l = function() {
      var e, t, n, s;
      console.log("getting location");
      t = null;
      n = null;
      navigator.geolocation.getCurrentPosition(function(e) {
        t = e.coords.latitude;
        return n = e.coords.longitude;
      });
      (function(e) {
        switch (e.code) {
         case e.TIMEOUT:
          return console.log("Geolocation error: Timeout");
         case e.POSITION_UNAVAILABLE:
          return console.log("Geolocation error: Position unavailable");
         case e.PERMISSION_DENIED:
          return console.log("Geolocation error: Permission denied");
         case e.UNKNOWN_ERROR:
          return console.log("Geolocation error: Unknown error");
        }
      });
      e = r[0].toDataURL();
      console.log("posting status");
      s = i.val() === "" ? i.attr("placeholder") : i.val();
      return $.post("/tweet", {
        status: s,
        photo: e,
        lat: t,
        "long": n
      }, function() {
        d.stop();
        m.html('<i class="icon-ok-sign" style="font-size: 300%; color: white;"></i>');
        return window.setTimeout(function() {
          m.html("");
          return c();
        }, 1e3);
      });
    };
    c = function() {
      p.fadeIn("fast");
      p.animate({
        marginTop: "50%"
      });
      r.css("margin-top", "0px");
      s.hide();
      i.val("");
      return n.val("");
    };
    return t = function(e) {
      var t, n, r, i, s, o, u, a, f, l, c, h, p, d;
      n = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=";
      f = 0;
      t = 0;
      i = "";
      d = [];
      if (!e) return e;
      for (;;) {
        l = e.charCodeAt(f++);
        c = e.charCodeAt(f++);
        h = e.charCodeAt(f++);
        r = l << 16 | c << 8 | h;
        s = r >> 18 & 63;
        o = r >> 12 & 63;
        u = r >> 6 & 63;
        a = r & 63;
        d[t++] = n.charAt(s) + n.charAt(o) + n.charAt(u) + n.charAt(a);
        if (!(f < e.length)) break;
      }
      i = d.join("");
      p = e.length % 3;
      return (p ? i.slice(0, p - 3) : i) + "===".slice(p || 3);
    };
  });
}).call(this);