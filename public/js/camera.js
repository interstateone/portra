// Generated by CoffeeScript 1.3.3
(function() {

  $(function() {
    var appPrompt, arrows, camera, canvas, caption, captionBox, counter, locateButton, populateCanvas, postPhoto, resetPage, share, shareBox, showSpinner, shutter, spinner, spinnerOptions, spinnerTarget, tweetLength;
    camera = $("input[type=\"file\"]");
    shutter = $(".shutter");
    canvas = $("canvas");
    arrows = $(".arrows");
    shareBox = $(".share-box");
    share = $(".share");
    locateButton = $(".locate");
    caption = $("textarea");
    captionBox = $(".caption");
    counter = $(".counter");
    appPrompt = $(".prompt");
    spinnerTarget = $(".spinnerContainer");
    spinner = void 0;
    tweetLength = 0;
    spinnerOptions = {
      lines: 9,
      length: 11,
      width: 4,
      radius: 12,
      corners: 1,
      rotate: 0,
      color: "#FFF",
      speed: 1.2,
      trail: 10,
      hwaccel: true,
      className: "spinner",
      zIndex: 2e9
    };
    if (("standalone" in window.navigator) && !window.navigator.standalone) {
      shutter.hide();
      appPrompt.show();
    }
    shutter.on("touchend", function(event) {
      camera.trigger("click");
      $.get("/twitter_config", function(data) {
        var status;
        tweetLength = 140 - parseInt($.parseJSON(data).characters_reserved_per_media, 10);
        caption.attr("maxLength", tweetLength);
        status = caption.val() === "" ? caption.attr("placeholder") : caption.val();
        return counter.text(status.length + "/" + tweetLength);
      });
      return _gaq.push(["_trackEvent", "Photos", "Camera"]);
    });
    caption.on("keyup", function() {
      var status;
      status = caption.val() === "" ? caption.attr("placeholder") : caption.val();
      return counter.text(status.length + "/" + tweetLength);
    });
    camera.on("change", function(event) {
      var photo, reader;
      photo = this.files[0];
      reader = new FileReader();
      reader.onload = showSpinner;
      return reader.readAsDataURL(photo);
    });
    $("body").hammer().bind("swipe", function(event) {
      if (event.direction === "up") {
        console.log("swiped up");
        if (canvas.is(":visible")) {
          canvas.animate({
            marginTop: "-2000px"
          }, "fast", function() {
            $(this).hide();
            captionBox.hide();
            spinner = new Spinner(spinnerOptions).spin(spinnerTarget[0]);
            shutter.fadeOut("fast");
            arrows.hide();
            return postPhoto();
          });
        }
        return _gaq.push(["_trackEvent", "Photos", "Tweet"]);
      }
    });
    showSpinner = function(event) {
      spinner = new Spinner(spinnerOptions).spin(spinnerTarget[0]);
      return shutter.animate({
        marginTop: window.innerHeight
      }, "swing", function() {
        return populateCanvas(event);
      });
    };
    populateCanvas = function(event) {
      var ctx, cvs, img;
      shutter.prop("disabled", true);
      canvas.show();
      cvs = canvas[0];
      ctx = cvs.getContext("2d");
      img = new Image();
      img.src = event.target.result;
      return img.onload = function() {
        var maxHeight, maxWidth, ratio;
        ratio = 1;
        maxWidth = 1000;
        maxHeight = 1000;
        if (img.width > img.height) {
          if (img.width > maxWidth) {
            cvs.height = maxWidth / img.width * img.height;
            cvs.width = maxWidth;
          }
        } else {
          if (img.height > maxHeight) {
            cvs.width = maxHeight / img.height * img.width;
            cvs.height = maxHeight;
          }
        }
        ctx.clearRect(0, 0, cvs.width, cvs.height);
        ctx.drawImage(img, 0, 0, cvs.width, cvs.height);
        return Caman("#photo-canvas", function() {
          return this.curves(["rgb"], [0, 0], [100, 80], [210, 245], [255, 255]).exposure(10).saturation(-8).colorize(255, 200, 0, 5).noise(1).vignette("40%", 18).render(function() {
            spinner.stop();
            shutter.prop("disabled", false);
            captionBox.show();
            return arrows.show();
          });
        });
      };
    };
    postPhoto = function() {
      var base64, endpoint, latitude, longitude, status, _this;
      console.log("getting location");
      latitude = void 0;
      longitude = void 0;
      endpoint = void 0;
      base64 = void 0;
      _this = this;
      navigator.geolocation.getCurrentPosition(function(position) {
        latitude = position.coords.latitude;
        return longitude = position.coords.longitude;
      });
      (function(error) {
        switch (error.code) {
          case error.TIMEOUT:
            return console.log("Geolocation error: Timeout");
          case error.POSITION_UNAVAILABLE:
            return console.log("Geolocation error: Position unavailable");
          case error.PERMISSION_DENIED:
            return console.log("Geolocation error: Permission denied");
          case error.UNKNOWN_ERROR:
            return console.log("Geolocation error: Unknown error");
        }
      });
      base64 = canvas[0].toDataURL();
      console.log("posting status");
      status = (caption.val() === "" ? caption.attr("placeholder") : caption.val());
      return $.post("/tweet", {
        status: status,
        photo: base64,
        lat: latitude,
        long: longitude
      }, function(data) {
        spinner.stop();
        spinnerTarget.html("<i class=\"icon-ok-sign\" style=\"font-size: 300%; color: white;\"></i>");
        return window.setTimeout((function() {
          target.html("");
          return resetPage();
        }), 1000);
      });
    };
    return resetPage = function() {
      shutter.fadeIn("fast");
      shutter.animate({
        marginTop: "50%"
      });
      canvas.css("margin-top", "0px");
      captionBox.hide();
      caption.val("");
      return camera.val("");
    };
  });

}).call(this);
