// Generated by CoffeeScript 1.3.3
(function() {
  $(function() {
    var e, t, n, r, i, s, o, u, a, f, l, c, h, p, d, v, m, g, y, b, w, E;
    r = $('input[type="file"]');
    g = $(".shutter");
    i = $("canvas");
    t = $(".arrows");
    v = $(".share-box");
    d = $(".share");
    l = $(".locate");
    s = $("textarea");
    o = $(".caption");
    a = $(".counter");
    e = $(".prompt");
    w = $(".spinnerContainer");
    E = 0;
    b = {
      lines: 12,
      length: 11,
      width: 4,
      radius: 12,
      color: "#FFF",
      hwaccel: !0
    };
    y = Spinner(b);
    if ("standalone" in window.navigator && !window.navigator.standalone) {
      g.hide();
      e.show();
    }
    g.on("touchend", function(e) {
      r.trigger("click");
      $.get("/twitter_config", function(e) {
        var t;
        E = 140 - parseInt($.parseJSON(e).characters_reserved_per_media, 10);
        s.attr("maxLength", E);
        t = s.val() === "" ? s.attr("placeholder") : s.val();
        return a.text(t.length + "/" + E);
      });
      return _gaq.push([ "_trackEvent", "Photos", "Camera" ]);
    });
    s.on("keyup", function() {
      var e;
      e = s.val() === "" ? s.attr("placeholder") : s.val();
      return a.text(e.length + "/" + E);
    });
    r.on("change", function(e) {
      var t, n;
      t = this.files[0];
      n = new FileReader;
      n.onload = u;
      return n.readAsBinaryString(t);
    });
    f = new Hammer($("body")[0]);
    f.onswipe = function(e) {
      if (e.direction === "up") {
        console.log("swiped up");
        i.is(":visible") && i.animate({
          marginTop: "-2000px"
        }, "fast", function() {
          $(this).hide();
          o.hide();
          y.spin(w[0]);
          g.fadeOut("fast");
          t.hide();
          return h();
        });
        return _gaq.push([ "_trackEvent", "Photos", "Tweet" ]);
      }
    };
    m = function(e) {
      y.spin(w[0]);
      return g.animate({
        marginTop: window.innerHeight
      }, "swing", function() {});
    };
    c = function(e, n) {
      var r, s, u;
      g.prop("disabled", !0);
      m();
      i.show();
      s = i[0];
      r = s.getContext("2d");
      u = new Image;
      u.src = "data:image/*;base64," + e;
      return u.onload = function() {
        var e, i, a, f;
        a = 1;
        i = 1e3;
        e = 1e3;
        if (u.width > u.height) {
          if (u.width > i) {
            s.height = i / u.width * u.height;
            s.width = i;
          }
        } else if (u.height > e) {
          s.width = e / u.height * u.width;
          s.height = e;
        }
        r.clearRect(0, 0, s.width, s.height);
        if ((f = parseInt(n.Orientation)) === 3 || f === 6 || f === 8) {
          r.translate(s.width / 2, s.height / 2);
          switch (parseInt(n.Orientation)) {
           case 6:
            r.rotate(Math.PI / 2);
            break;
           case 3:
            r.rotate(Math.PI);
            break;
           case 8:
            r.rotate(Math.Pi * 3 / 2);
          }
          r.translate(-s.width / 2, -s.height / 2);
        }
        r.drawImage(u, 0, 0, s.width, s.height);
        return Caman("#photo-canvas", function() {
          return this.exposure(10).saturation(10).colorize(255, 200, 0, 10).noise(1).vignette("40%", 20).render(function() {
            y.stop();
            g.prop("disabled", !1);
            o.show();
            return t.show();
          });
        });
      };
    };
    u = function() {
      var e, t;
      t = EXIF.readFromBinaryFile(new BinaryFile(this.result));
      e = n(this.result);
      return c(e, t);
    };
    h = function() {
      var e, t;
      console.log("getting location");
      navigator.geolocation.getCurrentPosition(function(e) {
        var t, n;
        t = e.coords.latitude;
        return n = e.coords.longitude;
      });
      (function(e) {
        switch (e.code) {
         case e.TIMEOUT:
          return console.log("Geolocation error: Timeout");
         case e.POSITION_UNAVAILABLE:
          return console.log("Geolocation error: Position unavailable");
         case e.PERMISSION_DENIED:
          return console.log("Geolocation error: Permission denied");
         case e.UNKNOWN_ERROR:
          return console.log("Geolocation error: Unknown error");
        }
      });
      e = i[0].toDataURL();
      console.log("posting status");
      t = s.val() === "" ? s.attr("placeholder") : s.val();
      return $.post("/tweet", {
        status: t,
        photo: e,
        lat: latitude,
        "long": longitude
      }, function(e) {
        y.stop();
        w.html('<i class="icon-ok-sign" style="font-size: 300%; color: white;"></i>');
        return window.setTimeout(function() {
          w.html("");
          return p();
        }, 1e3);
      });
    };
    p = function() {
      g.fadeIn("fast");
      g.animate({
        marginTop: "50%"
      });
      i.css("margin-top", "0px");
      o.hide();
      s.val("");
      return r.val("");
    };
    return n = function(e) {
      var t, n, r, i, s, o, u, a, f, l, c, h, p, d;
      n = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=";
      f = 0;
      t = 0;
      i = "";
      d = [];
      if (!e) return e;
      for (;;) {
        l = e.charCodeAt(f++);
        c = e.charCodeAt(f++);
        h = e.charCodeAt(f++);
        r = l << 16 | c << 8 | h;
        s = r >> 18 & 63;
        o = r >> 12 & 63;
        u = r >> 6 & 63;
        a = r & 63;
        d[t++] = n.charAt(s) + n.charAt(o) + n.charAt(u) + n.charAt(a);
        if (!(f < e.length)) break;
      }
      i = d.join("");
      p = e.length % 3;
      return (p ? i.slice(0, p - 3) : i) + "===".slice(p || 3);
    };
  });
}).call(this);